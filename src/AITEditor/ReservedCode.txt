if(CurrentData[1].length > 0){
                let NextData = Block.CharData[index + 1]
                CurrentData[1].forEach((style: string) => {
                    if(NextData === undefined && previousStyle === undefined){
                        let currentStyle = SearchUtils.findStyle(style)
                        let HTMLtag = this.GetStringTag(currentStyle, blockKey)
                        HTMLstorage.push(HTMLtag[0])
                    }
                    else if(previousStyle){{
                        if(previousStyle[1].findIndex(s => s === style) === -1){
                            let currentStyle = SearchUtils.findStyle(style)
                            let HTMLtag = this.GetStringTag(currentStyle, blockKey)
                            HTMLstorage.push(HTMLtag[0])
                        }
                    }
                    }
                    else if(NextData[1].findIndex(s => s === style) === -1){
                        let currentStyle = SearchUtils.findStyle(style)
                        let HTMLtag = this.GetStringTag(currentStyle, blockKey)
                        HTMLstorage.push(HTMLtag[0])
                    }
                })
                HTMLstorage.push(CurrentData[0].replaceAll(' ', '&nbsp'))

                CurrentData[1].reverse().forEach((style: string) => {
                    if(NextData === undefined || previousStyle === undefined){
                        let currentStyle = SearchUtils.findStyle(style)
                        let HTMLtag = this.GetStringTag(currentStyle, blockKey)
                        HTMLstorage.push(HTMLtag[1])
                    }
                    else if(NextData[1].findIndex(s => s === style) === -1){
                        let currentStyle = SearchUtils.findStyle(style)
                        let HTMLtag = this.GetStringTag(currentStyle, blockKey)
                        HTMLstorage.push(HTMLtag[1])
                    }
                })
            }
            else{
                let currentStyle = SearchUtils.findStyle('STANDART')
                let HTMLtag = this.GetStringTag(currentStyle, blockKey)
                HTMLstorage.push(HTMLtag[0])
                HTMLstorage.push(CurrentData[0].replaceAll(' ', '&nbsp'))
                HTMLstorage.push(HTMLtag[1])
            }